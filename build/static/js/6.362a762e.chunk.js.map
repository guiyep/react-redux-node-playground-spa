{"version":3,"sources":["routes/users-list/UsersList.module.css","components/filter-langs/FilterLangs.jsx","routes/users-list/UsersList.jsx","components/repos-list/ReposList.module.css","components/repos-container/ReposContainer.jsx","actions/repos/repos-collection.js","components/hoc/WithLoadingIndicator.jsx","components/repos-container/index.js","components/repos-list/ReposList.jsx","components/repos-list/index.js"],"names":["module","exports","UsersList_container","UsersList_filters","UsersList_list","FilterLangs","memo","_ref","onChange","defaultSelection","options","onChangeHandler","useCallback","value","includes","react_default","a","createElement","auto_complete","dataSource","defaultValue","placeholder","defaultProps","undefined","reservedWords","C#","C++","Cplusplus","Csharp","fixReservedWord","lang","UsersList","reposList","onLoad","location","history","onLangTextChanged","push","concat","queryStringObject","queryString","parse","search","searchByLang","repos","useMemo","filter","repo","length","owner","languages","map","item","Object","objectSpread","join","langOptions","keys","reduce","acc","_ref2","forEach","className","filter_langs_FilterLangs","repos_list","list","groupBy","columns","defaultName","ReposContainer","ReposList_container","ReposList_group_by","ReposList_header","ReposList_row","ReposList_cell","mapStateToProps","state","isLoading","data","mapDispatchToProps","dispatch","asyncToGenerator","regenerator_default","mark","_callee","getState","localStorage","savedData","response","repositories","_args","arguments","wrap","_context","prev","next","window","abrupt","getItem","type","LOAD_REPOS_ACTION","payload","JSON","START_LOAD_REPOS_ACTION","fetch","headers","Content-Type","sent","status","ERROR_LOAD_REPOS_ACTION","json","setItem","stringify","t0","stop","_x","_x2","apply","this","WrapperComponent","WrapperComponentWithLoadingIndicator","props","react","WithLoadingIndicator","connect","__webpack_require__","d","__webpack_exports__","buildHeader","columnName","index","key","charAt","toUpperCase","slice","buildRows","rowIndex","columnIndex","ReposList","useEffect","currentList","values","groupByValue","listItem","currentItem","repos_list_ReposList"],"mappings":"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","file":"static/js/6.362a762e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersList_container\":\"UsersList_UsersList_container__1owHo\",\"UsersList_filters\":\"UsersList_UsersList_filters__2TW8o\",\"UsersList_list\":\"UsersList_UsersList_list__2fTzf\"};","import React, { memo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { AutoComplete } from 'antd';\n\nconst FilterLangs = memo(({ onChange, defaultSelection, options }) => {\n  const onChangeHandler = useCallback(\n    value => {\n      if (options.includes(value)) {\n        onChange(value);\n      }\n    },\n    [onChange, options],\n  );\n\n  return (\n    <AutoComplete\n      dataSource={options}\n      defaultValue={defaultSelection}\n      onChange={onChangeHandler}\n      placeholder=\"Select a language\"\n    />\n  );\n});\n\nFilterLangs.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  defaultSelection: PropTypes.string,\n};\n\nFilterLangs.defaultProps = {\n  defaultSelection: undefined,\n};\n\nexport default FilterLangs;\n","import React, { memo, useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReposList } from '../../components/repos-list';\nimport { ReposContainer } from '../../components/repos-container';\nimport { FilterLangs } from '../../components/filter-langs';\nimport { UsersList_container, UsersList_filters, UsersList_list } from './UsersList.module.css';\nimport queryString from 'query-string';\n\nconst filterByLangText = 'language';\n\nconst reservedWords = {\n  'C#': 'Csharp',\n  'C++': 'Cplusplus',\n  Cplusplus: 'C++',\n  Csharp: 'C#',\n};\n\nconst fixReservedWord = lang => (lang && reservedWords[lang]) || lang;\n\nconst UsersList = memo(({ reposList, onLoad, location, history }) => {\n  const onLangTextChanged = useCallback(\n    lang => {\n      history.push(`?${filterByLangText}=${fixReservedWord(lang)}`);\n    },\n    [history],\n  );\n\n  const queryStringObject = queryString.parse(location.search);\n  const searchByLang = fixReservedWord(queryStringObject[filterByLangText]);\n\n  const repos = useMemo(() => {\n    return reposList\n      .filter(repo =>\n        searchByLang && searchByLang.length > 0 ? repo.owner && repo.languages.includes(searchByLang) : true,\n      )\n      .map(item => ({ ...item, languages: item.languages.join(', ') }));\n  }, [reposList, searchByLang]);\n\n  const langOptions = useMemo(\n    () =>\n      Object.keys(\n        reposList.reduce((acc, { languages }) => {\n          languages.forEach(lang => {\n            acc[lang] = true;\n          });\n\n          return acc;\n        }, {}),\n      ),\n    [reposList],\n  );\n\n  return (\n    <div className={UsersList_container}>\n      <div className={UsersList_filters}>\n        <FilterLangs defaultSelection={searchByLang} options={langOptions} onChange={onLangTextChanged} />\n      </div>\n      <div className={UsersList_list}>\n        <ReposList list={repos} onLoad={onLoad} groupBy=\"owner\" columns={['name', 'languages']} />\n      </div>\n    </div>\n  );\n});\n\nUsersList.defaultName = 'UsersList';\n\nUsersList.propTypes = {\n  reposList: PropTypes.array,\n};\n\nUsersList.defaultProps = {\n  reposList: [],\n};\n\nexport default ReposContainer(UsersList);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ReposList_container\":\"ReposList_ReposList_container__366Dp\",\"ReposList_group_by\":\"ReposList_ReposList_group_by__1fu9c\",\"ReposList_header\":\"ReposList_ReposList_header__n0MUt\",\"ReposList_row\":\"ReposList_ReposList_row__151Hk\",\"ReposList_cell\":\"ReposList_ReposList_cell__1sA-k\"};","import { connect } from 'react-redux';\nimport { reposCollectionAction } from '../../actions/repos';\nimport { WithLoadingIndicator } from '../hoc';\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.repos.isLoading,\n    reposList: state.repos && state.repos.data,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onLoad: () => dispatch(reposCollectionAction()),\n});\n\nexport default WrapperComponent => {\n  const WrapperComponentWithLoadingIndicator = WithLoadingIndicator(WrapperComponent);\n\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(WrapperComponentWithLoadingIndicator);\n};\n","import { LOAD_REPOS_ACTION, START_LOAD_REPOS_ACTION, ERROR_LOAD_REPOS_ACTION } from '../../constants/repos';\n\nexport const uniqueIdentifier = 'repos-local-storage';\n\nexport const reposCollectionAction = () => async (dispatch, getState, localStorage = window.localStorage) => {\n  try {\n    const state = getState();\n    if (state.data) {\n      return;\n    }\n\n    const savedData = localStorage.getItem(uniqueIdentifier);\n    if (savedData) {\n      dispatch({\n        type: LOAD_REPOS_ACTION,\n        payload: JSON.parse(savedData),\n      });\n      \n    } else {\n      dispatch({\n        type: START_LOAD_REPOS_ACTION,\n      });\n\n      const response = await fetch('/api/repos', {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.status !== 200) {\n        dispatch({\n          type: ERROR_LOAD_REPOS_ACTION,\n        });\n\n        return;\n      }\n\n      const { repositories } = await response.json();\n      localStorage.setItem(uniqueIdentifier, JSON.stringify(repositories));\n\n      dispatch({\n        type: LOAD_REPOS_ACTION,\n        payload: repositories,\n      });\n\n      return;\n    }\n  } catch (ex) {\n    dispatch({\n      type: ERROR_LOAD_REPOS_ACTION,\n    });\n\n    return ex;\n  }\n};\n","import React, { Fragment } from 'react';\n\nexport const WithLoadingIndicator = WrapperComponent => props => (\n  <Fragment>\n    {!props.data && props.isLoading && 'loading data...'}\n    <WrapperComponent {...props} />\n  </Fragment>\n);\n","import ReposContainer from './ReposContainer';\n\nexport { ReposContainer };\n","import React, { memo, useEffect, useMemo, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ReposList_container,\n  ReposList_row,\n  ReposList_cell,\n  ReposList_header,\n  ReposList_group_by,\n} from './ReposList.module.css';\n\nconst buildHeader = columns => (\n  <div className={ReposList_header}>\n    {columns.map((columnName, index) => (\n      <div key={index} className={ReposList_cell}>\n        {`${columnName.charAt(0).toUpperCase()}${columnName.slice(1)}`}\n      </div>\n    ))}\n  </div>\n);\n\nconst buildRows = (columns, list) => (\n  <Fragment>\n    {(list &&\n      list.length > 0 &&\n      list.map((item, rowIndex) => (\n        <div className={ReposList_row} key={rowIndex}>\n          {columns.map((columnName, columnIndex) => (\n            <div key={columnIndex} className={ReposList_cell}>\n              {item[columnName]}\n            </div>\n          ))}\n        </div>\n      ))) || <div className={ReposList_row}>No Items to display</div>}\n  </Fragment>\n);\n\nconst ReposList = memo(({ list, onLoad, groupBy, columns }) => {\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  const currentList = useMemo(() => {\n    if (groupBy) {\n      return Object.values(\n        list.reduce((acc, item) => {\n          const groupByValue = item[groupBy] || 'Not defined';\n\n          if (!acc[groupByValue]) {\n            acc[groupByValue] = {\n              groupBy: item[groupBy],\n              list: list.filter(listItem => item[groupBy] === listItem[groupBy]),\n            };\n          }\n          return acc;\n        }, {}),\n      );\n    }\n    return list;\n  }, [list, groupBy]);\n\n  // break component soon\n  if (columns && columns.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={ReposList_container}>\n      {!!groupBy && (\n        <Fragment>\n          {(currentList &&\n            currentList.length > 0 &&\n            currentList.map((currentItem, index) => (\n              <Fragment key={index}>\n                <div className={ReposList_group_by}>{currentItem.groupBy}</div>\n                {buildHeader(columns)}\n                {buildRows(columns, currentItem.list)}\n              </Fragment>\n            ))) || <div className={ReposList_row}>No Items to display</div>}\n        </Fragment>\n      )}\n      {!groupBy && (\n        <Fragment>\n          {buildHeader(columns)}\n          {buildRows(columns, currentList)}\n        </Fragment>\n      )}\n    </div>\n  );\n});\n\nReposList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object),\n  onLoad: PropTypes.func,\n  groupBy: PropTypes.string,\n  columns: PropTypes.PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nReposList.defaultProps = {\n  list: [],\n  onLoad: () => {},\n  groupBy: undefined,\n};\n\nexport default ReposList;\n","import ReposList from './ReposList';\n\nexport { ReposList };\n"],"sourceRoot":""}